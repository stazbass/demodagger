// Generated by Dagger (https://google.github.io/dagger).
package com.stz.dagger;

import dagger.internal.Preconditions;

public final class DaggerMainComponent implements MainComponent {
  private StringModule stringModule;

  private DaggerMainComponent(Builder builder) {
    initialize(builder);
  }

  public static Builder builder() {
    return new Builder();
  }

  public static MainComponent create() {
    return new Builder().build();
  }

  @SuppressWarnings("unchecked")
  private void initialize(final Builder builder) {
    this.stringModule = builder.stringModule;
  }

  @Override
  public String buildString() {
    return StringModule_GenStringFactory.proxyGenString(stringModule);
  }

  @Override
  public BuilderUser createUser() {
    return new BuilderUser(StringModule_GenStringFactory.proxyGenString(stringModule));
  }

  public static final class Builder {
    private StringModule stringModule;

    private Builder() {}

    public MainComponent build() {
      if (stringModule == null) {
        this.stringModule = new StringModule();
      }
      return new DaggerMainComponent(this);
    }

    public Builder stringModule(StringModule stringModule) {
      this.stringModule = Preconditions.checkNotNull(stringModule);
      return this;
    }
  }
}
